apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "nl.eduvpn.app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 10
        versionName "1.3"
        buildConfigField "String", "SECURE_INTERNET_DISCOVERY_URL", "\"https://static.eduvpn.nl/disco/secure_internet.json\""
        buildConfigField "String", "INSTITUTE_ACCESS_DISCOVERY_URL", "\"https://static.eduvpn.nl/disco/institute_access.json\""
        buildConfigField "String", "SIGNATURE_URL_POSTFIX", "\".sig\""
        buildConfigField "String", "SIGNATURE_VALIDATION_PUBLIC_KEY", "\"E5On0JTtyUVZmcWd+I/FXRm32nSq8R2ioyW7dcu/U88=\""
        buildConfigField "boolean", "API_DISCOVERY_ENABLED", "true"

        // API
        buildConfigField "String", "OAUTH_CLIENT_ID", "\"org.eduvpn.app.android\""
        buildConfigField "String", "OAUTH_REDIRECT_URI", "\"https://android.app.eduvpn.org/api/callback\""
        buildConfigField "String", "OAUTH_SCOPE", "\"config\""
        buildConfigField "String", "CERTIFICATE_DISPLAY_NAME", "\"eduVPN for Android\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                'appAuthRedirectHost': 'android.app.eduvpn.org',
        ]
        missingDimensionStrategy 'implementation', 'ui' // Skeleton is no option for us because we need the log activity

        // This excludes some pretty old ABIs such armeabi or mips. LibSodium-JNI still includes binaries for these, which
        // leads to some devices selecting these as the app ABI, but the OpenVPN library did not include a binary for these,
        // thus resulting in a crash.
        ndk {
            abiFilters 'arm64-v8a', 'x86', 'x86_64', 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    flavorDimensions "product"

    productFlavors {
        // Android Studio uses the alphabetically first flavor as the default, so I selected a name which would precede "dev" (sadly, "default" is a reserved keyword)
        basic {
            dimension "product"
            isDefault = true
        }
        dev {
            dimension "product"
            applicationId "nl.eduvpn.app.dev"
            // Override the URLs for fetching the configs
            buildConfigField "String", "SECURE_INTERNET_DISCOVERY_URL", "\"https://static.eduvpn.nl/disco/secure_internet_dev.json\""
            buildConfigField "String", "INSTITUTE_ACCESS_DISCOVERY_URL", "\"https://static.eduvpn.nl/disco/institute_access_dev.json\""
            buildConfigField "String", "SIGNATURE_VALIDATION_PUBLIC_KEY", "\"zzls4TZTXHEyV3yxaxag1DZw3tSpIdBoaaOjUGH/Rwg=\""
        }
        home {
            dimension "product"
            applicationId "org.letsconnect_vpn.app"
            // API discovery is disabled, and only custom URLs can be entered.
            buildConfigField "boolean", "API_DISCOVERY_ENABLED", "false"
            buildConfigField "String", "OAUTH_CLIENT_ID", "\"org.letsconnect-vpn.app.android\""
            buildConfigField "String", "OAUTH_REDIRECT_URI", "\"https://android.app.letsconnect-vpn.org/api/callback\""
            buildConfigField "String", "CERTIFICATE_DISPLAY_NAME", "\"Let's Connect! for Android\""
            manifestPlaceholders = [
                    'appAuthRedirectHost': 'android.app.letsconnect-vpn.org',
            ]
        }
    }

    lintOptions {
        disable 'GradleDependency', // Gradle dependencies can be a bit outdated, since we prefer to use the same versions as in the VPN library
                'UnsafeNativeCodeLocation', // The OpenVPN .so files are put to a different place, as per the documentation
                'RtlSymmetry', 'RtlHardcoded', // No support for RTL as of now
                'MissingTranslation' // The OpenVPN library contains translations for a lot off languages. This app only has english, so it complains that we are missing translations for the other languages
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

def daggerVersion = "2.25.2"
def okHttpVersion = "4.2.2"

dependencies {
    // The VPN library
    implementation project(path: ':ics-openvpn-main')
    // Please try to stay in sync with the versions used in the ics-openvpn module
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation 'com.google.android.material:material:1.0.0'
    implementation "androidx.browser:browser:1.0.0" // Custom tabs
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    // OAuth client
    implementation 'net.openid:appauth:0.7.1'
    // Secure preferences
    implementation 'com.scottyab:secure-preferences-lib:0.1.4'
    // HTTP client
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    // Dependency injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    // Image loader
    implementation 'com.squareup.picasso:picasso:2.71828'
    // Public key verification
    implementation "com.github.joshjdevl.libsodiumjni:libsodium-jni-aar:1.0.6@aar"
    // Reactive extensions for asynchronous events
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'

    // All testing related libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
}
